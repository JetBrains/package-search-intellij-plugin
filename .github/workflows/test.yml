name: Run tests

on:
  pull_request:
    branches: [ master ]

jobs:
  gradle:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        gradle-version: [ '5.6.4', '6.9.2', '7.6.4', '8.6' ]
    name: Gradle ${{ matrix.gradle-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    outputs:
      result: ${{ steps.final_step.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: gradle/gradle-build-action@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'
      - name: Run tests
        env:
          KMP: true
          GRADLE_VERSION: ${{ matrix.gradle-version }}
          GRADLE_ENTERPRISE_KEY: ${{ secrets.GRADLE_ENTERPRISE_KEY }}
          JAVA_VERSION: ${{matrix.jdk-version}}
        run: ./gradlew :plugin:test --continue --tests "com.jetbrains.packagesearch.plugin.tests.projectservice.GradleProjectTest"
      - name: Upload test result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: testResult-${{ matrix.os }}-${{ matrix.gradle-version }}
          path: /home/runner/work/package-search-intellij-plugin/package-search-intellij-plugin/plugin/build/testData
  maven:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    name: Maven on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: gradle/gradle-build-action@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'
      - name: Run Gradle tests
        env:
          KMP: true
          GRADLE_ENTERPRISE_KEY: ${{ secrets.GRADLE_ENTERPRISE_KEY }}
          JAVA_VERSION: ${{matrix.jdk-version}}
        run: ./gradlew :plugin:test --continue --tests "com.jetbrains.packagesearch.plugin.tests.projectservice.MavenProjectTest"
      - name: Upload test result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: testResult-${{ matrix.os }}-${{ matrix.gradle-version }}
          path: /home/runner/work/package-search-intellij-plugin/package-search-intellij-plugin/plugin/build/testData
  evaluate-results:
    needs: [ gradle, maven ]
    runs-on: ubuntu-latest
    steps:
      - name: Check results
        run: |
          echo "Gradle job result: ${{ needs.gradle.result }}"
          echo "Maven job result: ${{ needs.maven.result }}"
          if [ ${{ needs.gradle.result }} == 'failure' ] || [ ${{ needs.maven.result }} == 'failure' ]; then
            echo "At least one matrix job failed."
            exit 1
          else
            echo "All matrix jobs succeeded."
          fi