name: 'Project Test Runner'
description: 'Sets up JDK, checks out code, and runs Gradle tests'
inputs:
  required-os:
    description: 'Operating system to run the tests on'
    required: true
    default: 'ubuntu-latest'
  java-sdk-version:
    description: 'Java SDK version to set up'
    required: false
    default: '11'
  java-sdk-distribution:
    description: 'Java SDK version to set up'
    required: false
    default: 'temurin'
  gradle-version:
    description: 'Gradle version for the tests'
    required: false
  gradle-test-command:
    description: 'Gradle task to run - without the `./gradlew` prefix'
    required: true
    default: 'test'
outputs:
  test-result-path:
    value: ${{ steps.set-output.outputs.test-result-path }}
    description: 'Path to the test results'

runs:
  using: 'composite'
  steps:
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-sdk-version }}
        distribution: ${{ inputs.java-sdk-distribution }}
    - name: Run Gradle Test Task
      env:
        KMP: 'true'
        GRADLE_VERSION: ${{ inputs.gradle-options }}
        GRADLE_ENTERPRISE_KEY: ${{ secrets.GRADLE_ENTERPRISE_KEY }}
        JAVA_VERSION: ${{inputs.java-sdk-version}}
      run: |
        ./gradlew ${{ inputs.gradle-task }} ${{ inputs.gradle-options }}
      shell: bash
    - name: Upload test result
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: testResult-${{ inputs.required-os }}-${{ inputs.gradle-version }}
        path: /home/runner/work/package-search-intellij-plugin/package-search-intellij-plugin/plugin/build/testData
    - name: Set output
      run: echo "::set-output name=test-result-path::$(pwd)/build/reports/tests"
      shell: bash